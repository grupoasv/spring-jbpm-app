<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:kie="http://drools.org/schema/kie-spring"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
    	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
    	http://drools.org/schema/kie-spring http://drools.org/schema/kie-spring-2.0.0.xsd">

    <context:annotation-config/>
    <tx:annotation-driven/>

    <!--<tx:jta-transaction-manager />-->
    <bean id="transactionManager"
          class="org.springframework.transaction.jta.JtaTransactionManager">
        <!--<property name="userTransactionName" value="java:comp/UserTransaction" />-->
        <property name="transactionManagerName" value="java:jboss/TransactionManager"/>
    </bean>

    <!--<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager" />-->

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          depends-on="transactionManager">
        <property name="persistenceXmlLocation" value="classpath:/META-INF/persistence.xml"/>
    </bean>

    <util:properties id="roleProperties" location="classpath:/roles.properties"/>

    <bean id="userGroupCallback" class="org.jbpm.services.task.identity.JBossUserGroupCallbackImpl">
        <constructor-arg name="userGroups" ref="roleProperties"></constructor-arg>
    </bean>

    <bean id="identityProvider" class="org.jbpm.spring.SpringSecurityIdentityProvider"/>

    <bean id="runtimeManagerFactory" class="org.kie.spring.manager.SpringRuntimeManagerFactoryImpl">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="userGroupCallback" ref="userGroupCallback"/>
    </bean>

    <bean id="transactionCmdService" class="org.jbpm.shared.services.impl.TransactionalCommandService">
        <constructor-arg name="emf" ref="entityManagerFactory"></constructor-arg>
    </bean>

    <bean id="taskService" class="org.kie.spring.factorybeans.TaskServiceFactoryBean" destroy-method="close">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="userGroupCallback" ref="userGroupCallback"/>
        <property name="listeners">
            <list>
                <bean class="org.jbpm.services.task.audit.JPATaskLifeCycleEventListener">
                    <constructor-arg value="true"/>
                </bean>
            </list>
        </property>
    </bean>

    <!-- definition service -->
    <bean id="definitionService" class="org.jbpm.kie.services.impl.bpmn2.BPMN2DataServiceImpl"/>

    <!-- runtime data service -->
    <bean id="runtimeDataService" class="org.jbpm.kie.services.impl.RuntimeDataServiceImpl">
        <property name="commandService" ref="transactionCmdService"/>
        <property name="identityProvider" ref="identityProvider"/>
        <property name="taskService" ref="taskService"/>
    </bean>

    <!-- deployment service -->
    <bean id="deploymentService" class="org.jbpm.kie.services.impl.KModuleDeploymentService"
          depends-on="entityManagerFactory" init-method="onInit">
        <property name="bpmn2Service" ref="definitionService"/>
        <property name="emf" ref="entityManagerFactory"/>
        <property name="managerFactory" ref="runtimeManagerFactory"/>
        <property name="identityProvider" ref="identityProvider"/>
        <property name="runtimeDataService" ref="runtimeDataService"/>
    </bean>

    <!-- process service -->
    <bean id="processService" class="org.jbpm.kie.services.impl.ProcessServiceImpl" depends-on="deploymentService">
        <property name="dataService" ref="runtimeDataService"/>
        <property name="deploymentService" ref="deploymentService"/>
    </bean>

    <!-- user task service -->
    <bean id="userTaskService" class="org.jbpm.kie.services.impl.UserTaskServiceImpl" depends-on="deploymentService">
        <property name="dataService" ref="runtimeDataService"/>
        <property name="deploymentService" ref="deploymentService"/>
    </bean>

    <!-- register runtime data service as listener on deployment service so it can receive notification about deployed and undeployed units -->
    <bean id="data" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"
          depends-on="deploymentService">
        <property name="targetObject" ref="deploymentService"></property>
        <property name="targetMethod">
            <value>addListener</value>
        </property>
        <property name="arguments">
            <list>
                <ref bean="runtimeDataService"/>
            </list>
        </property>
    </bean>

    <bean id="formManagerService" class="org.jbpm.kie.services.impl.FormManagerServiceImpl"/>

    <kie:kstore id="kstore"/> <!--provides KnowledgeStoreService implementation -->

    <kie:kmodule id="persistence_module">
        <kie:kbase name="asv" packages="com.grupoasv.bpm" default="true">
            <kie:ksession name="jpaSingleSessionCommandService" default="true">
                <kie:configuration>
                    <kie:jpa-persistence>
                        <kie:transaction-manager ref="transactionManager"/>
                        <kie:entity-manager-factory ref="entityManagerFactory"/>
                    </kie:jpa-persistence>
                </kie:configuration>
            </kie:ksession>
        </kie:kbase>
    </kie:kmodule>

    <bean id="kiePostProcessor" class="org.kie.spring.annotations.KModuleAnnotationPostProcessor"/>

    <bean id="docClassificationProcess" factory-method="newClassPathResource"
          class="org.kie.internal.io.ResourceFactory">
        <constructor-arg>
            <value>processes/docClassification.bpmn2</value>
        </constructor-arg>
    </bean>

    <bean id="runtimeEnvironment" class="org.kie.spring.factorybeans.RuntimeEnvironmentFactoryBean">
        <property name="type" value="DEFAULT"/>
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="assets">
            <map>
                <entry key-ref="docClassificationProcess">
                    <util:constant static-field="org.kie.api.io.ResourceType.BPMN2"/>
                </entry>
            </map>
        </property>
        <property name="taskService" ref="taskService"/>
    </bean>

    <bean id="runtimeManager" class="org.kie.spring.factorybeans.RuntimeManagerFactoryBean" destroy-method="close">
        <property name="identifier" value="spring-rm"/>
        <property name="runtimeEnvironment" ref="runtimeEnvironment"/>
    </bean>

    <bean id="logService" class="org.jbpm.process.audit.JPAAuditLogService">
        <constructor-arg>
            <ref bean="entityManagerFactory"/>
        </constructor-arg>
        <constructor-arg>
            <value>STANDALONE_JTA_SPRING_SHARED_EM</value>
        </constructor-arg>
    </bean>


    <!--<bean id="userGroupCallback" class="org.jbpm.services.task.identity.JBossUserGroupCallbackImpl">
      <constructor-arg name="userGroups" ref="roleProperties"></constructor-arg>
    </bean>

    <bean id="definitionService" class="org.jbpm.kie.services.impl.bpmn2.BPMN2DataServiceImpl"/>

    <bean id="runtimeManagerFactory" class="org.kie.spring.manager.SpringRuntimeManagerFactoryImpl">
      <property name="transactionManager" ref="jbpmTxManager"/>
      <property name="userGroupCallback" ref="userGroupCallback"/>
    </bean>

    <bean id="identityProvider" class="org.jbpm.spring.SpringSecurityIdentityProvider"/>

    <bean id="taskService" class="org.kie.spring.factorybeans.TaskServiceFactoryBean" destroy-method="close">
      <property name="entityManagerFactory" ref="bpmEmf"/>
      <property name="transactionManager" ref="jbpmTxManager"/>
      <property name="userGroupCallback" ref="userGroupCallback"/>
      <property name="listeners">
        <list>
          <bean class="org.jbpm.services.task.audit.JPATaskLifeCycleEventListener">
            <constructor-arg value="true"/>
          </bean>
        </list>
      </property>
    </bean>

    <bean id="transactionCmdService" class="org.jbpm.shared.services.impl.TransactionalCommandService">
      <constructor-arg name="emf" ref="bpmEmf"></constructor-arg>
    </bean>

    <bean id="runtimeDataService" class="org.jbpm.kie.services.impl.RuntimeDataServiceImpl">
      <property name="commandService" ref="transactionCmdService"/>
      <property name="identityProvider" ref="identityProvider"/>
      <property name="taskService" ref="taskService"/>
    </bean>

    <bean id="formManagerService" class="org.jbpm.kie.services.impl.FormManagerServiceImpl"/>

    <bean id="deploymentService" class="org.jbpm.kie.services.impl.KModuleDeploymentService" depends-on="bpmEmf" init-method="onInit">
      <property name="bpmn2Service" ref="definitionService"/>
      <property name="emf" ref="bpmEmf"/>
      <property name="managerFactory" ref="runtimeManagerFactory"/>
      <property name="identityProvider" ref="identityProvider"/>
      <property name="runtimeDataService" ref="runtimeDataService"/>
      <property name="formManagerService" ref="formManagerService"/>
    </bean>

    <bean id="data" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean" depends-on="deploymentService">
      <property name="targetObject" ref="deploymentService"></property>
      <property name="targetMethod"><value>addListener</value></property>
      <property name="arguments">
      <list>
          <ref bean="runtimeDataService"/>
      </list>
      </property>
    </bean>

    <bean id="processService" class="org.jbpm.kie.services.impl.ProcessServiceImpl" depends-on="deploymentService">
      <property name="dataService" ref="runtimeDataService"/>
      <property name="deploymentService" ref="deploymentService"/>
    </bean>

    <bean id="userTaskService" class="org.jbpm.kie.services.impl.UserTaskServiceImpl" depends-on="deploymentService">
      <property name="dataService" ref="runtimeDataService"/>
      <property name="deploymentService" ref="deploymentService"/>
    </bean>

    &lt;!&ndash; NEW &ndash;&gt;

    <kie:kstore id="kstore" /> &lt;!&ndash; provides KnowledgeStoreService implementation &ndash;&gt;

    <kie:kmodule id="persistence_module">
      <kie:kbase name="asv" packages="com.grupoasv.bpm" default="true">
        <kie:ksession name="jpaSingleSessionCommandService" default="true">
          <kie:configuration>
            <kie:jpa-persistence>
              <kie:transaction-manager ref="jbpmTxManager"/>
              <kie:entity-manager-factory ref="bpmEmf"/>
            </kie:jpa-persistence>
          </kie:configuration>
        </kie:ksession>
      </kie:kbase>
    </kie:kmodule>

    <bean id="kiePostProcessor" class="org.kie.spring.annotations.KModuleAnnotationPostProcessor"/>

    <bean id="docClassificationProcess" factory-method="newClassPathResource" class="org.kie.internal.io.ResourceFactory">
      <constructor-arg>
        <value>processes/docClassification.bpmn2</value>
      </constructor-arg>
    </bean>

    <bean id="runtimeEnvironment" class="org.kie.spring.factorybeans.RuntimeEnvironmentFactoryBean">
      <property name="type" value="DEFAULT"/>
      <property name="entityManagerFactory" ref="bpmEmf"/>
      <property name="transactionManager" ref="jbpmTxManager"/>
      <property name="assets">
        <map>
          <entry key-ref="docClassificationProcess"><util:constant static-field="org.kie.api.io.ResourceType.BPMN2"/></entry>
        </map>
      </property>
      <property name="taskService" ref="taskService"/>
    </bean>

    <bean id="runtimeManager" class="org.kie.spring.factorybeans.RuntimeManagerFactoryBean" destroy-method="close">
      <property name="identifier" value="spring-rm"/>
      <property name="runtimeEnvironment" ref="runtimeEnvironment"/>
    </bean>

    <bean id="logService" class="org.jbpm.process.audit.JPAAuditLogService">
      <constructor-arg>
        <ref bean="bpmEmf"/>
      </constructor-arg>
      <constructor-arg>
        <value>STANDALONE_JTA_SPRING_SHARED_EM</value>
      </constructor-arg>
    </bean>-->


</beans>
